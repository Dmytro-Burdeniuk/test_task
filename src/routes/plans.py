from fastapi import APIRouter, Depends, UploadFile, File, HTTPException, status
from sqlalchemy.orm import Session
import pandas as pd
from src import crud
from src.schemas import schemas_logic
from src.database import get_db

# –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –º–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ç–æ—Ä–∞ –¥–ª—è —Ä–æ–±–æ—Ç–∏ –∑ –ø–ª–∞–Ω–∞–º–∏
router = APIRouter(tags=["Plans"])


@router.post(
    "/plans_insert",
    response_model=schemas_logic.PlanInsertResponse,
    status_code=status.HTTP_201_CREATED,
)
def upload_plans(file: UploadFile = File(...), db: Session = Depends(get_db)):
    """
    üìå Endpoint –¥–ª—è —ñ–º–ø–æ—Ä—Ç—É –ø–ª–∞–Ω—ñ–≤ —ñ–∑ Excel —Ñ–∞–π–ª—É.

    - **file**: Excel —Ñ–∞–π–ª –∑ –∫–æ–ª–æ–Ω–∫–∞–º–∏ `period`, `category_name`, `sum`
    - **db**: –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ –±–∞–∑–∏ –¥–∞–Ω–∏—Ö (Session)

    –ü—Ä–æ—Ü–µ—Å:
    1. –ß–∏—Ç–∞—î Excel —Ñ–∞–π–ª —É pandas DataFrame.
    2. –ü–µ—Ä–µ–≤—ñ—Ä—è—î –Ω–∞—è–≤–Ω—ñ—Å—Ç—å –æ–±–æ–≤'—è–∑–∫–æ–≤–∏—Ö –∫–æ–ª–æ–Ω–æ–∫.
    3. –°—Ç–≤–æ—Ä—é—î —Å–ø–∏—Å–æ–∫ –æ–±'—î–∫—Ç—ñ–≤ PlanInsertItem –¥–ª—è –∫–æ–∂–Ω–æ–≥–æ —Ä—è–¥–∫–∞.
    4. –í–∏–∫–ª–∏–∫–∞—î —Ñ—É–Ω–∫—Ü—ñ—é crud.insert_plans –¥–ª—è –¥–æ–¥–∞–≤–∞–Ω–Ω—è –¥–∞–Ω–∏—Ö —É –±–∞–∑—É.

    –ü–æ–≤–µ—Ä—Ç–∞—î:
    - –û–±'—î–∫—Ç PlanInsertResponse –∑ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—î—é –ø—Ä–æ –¥–æ–¥–∞–Ω—ñ –ø–ª–∞–Ω–∏.

    –ü–æ–º–∏–ª–∫–∏:
    - HTTP 400: —è–∫—â–æ —Ñ–∞–π–ª –Ω–µ Excel –∞–±–æ –Ω–µ –º–∞—î –ø–æ—Ç—Ä—ñ–±–Ω–∏—Ö –∫–æ–ª–æ–Ω–æ–∫.
    """
    try:
        # –ß–∏—Ç–∞–Ω–Ω—è Excel —Ñ–∞–π–ª—É —É DataFrame
        df = pd.read_excel(file.file)
    except Exception:
        # –ü–æ–≤–µ—Ä—Ç–∞—î–º–æ –ø–æ–º–∏–ª–∫—É, —è–∫—â–æ —Ñ–∞–π–ª –Ω–µ–∫–æ—Ä–µ–∫—Ç–Ω–∏–π
        raise HTTPException(status_code=400, detail="Invalid Excel file")

    # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞—è–≤–Ω–æ—Å—Ç—ñ –æ–±–æ–≤'—è–∑–∫–æ–≤–∏—Ö –∫–æ–ª–æ–Ω–æ–∫
    required_cols = {"period", "category_name", "sum"}
    if not required_cols.issubset(df.columns):
        raise HTTPException(
            status_code=400, detail=f"Excel must have columns: {required_cols}"
        )

    # –°—Ç–≤–æ—Ä–µ–Ω–Ω—è —Å–ø–∏—Å–∫—É –æ–±'—î–∫—Ç—ñ–≤ PlanInsertItem –¥–ª—è –≤—Å—Ç–∞–≤–∫–∏ –≤ –±–∞–∑—É
    plan_items = [
        schemas_logic.PlanInsertItem(
            period=row["period"], category_name=row["category_name"], sum=row["sum"]
        )
        for _, row in df.iterrows()
    ]

    # –í–∏–∫–ª–∏–∫ CRUD-—Ñ—É–Ω–∫—Ü—ñ—ó –¥–ª—è –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è –ø–ª–∞–Ω—ñ–≤ —É –±–∞–∑—ñ
    return crud.insert_plans(db, plan_items)
